using Test

include("dijkstra_sp.jl")

const FILEDIR = "./tests"

function sum_w(g, path)
  ## summing weigths on path from path[1] to path[end] == dist_to(path[1], path[end])
  prev_p, sum_w = path[1], 0

  for p in path[2:end]
    ix = findfirst(t -> t[1] == p, adj(g, prev_p))
    (_, w) = adj(g, prev_p)[ix] ## g.adj[prev_p][ix]
    sum_w += w                  ## sum_w is the distance
    prev_p = p
  end

  sum_w
end

@testset "DSP 4v_5e" begin
  dsp, g = shortest_path("$(FILEDIR)/simple_4v_5e_digraph.txt", 1)

  @test has_path(dsp, g, 4) # true
  @test path_to(dsp, g, 4) == [1, 2, 3, 4]
  @test dist_to(dsp, g, 4) == 6
end

@testset "DSP 8v_13e" begin
  dsp, g = shortest_path("$(FILEDIR)/simple_8v_13e_digraph.txt", 6)

  @test has_path(dsp, g, 7) # true
  @test path_to(dsp, g, 7) == [6, 2, 4, 7]
  @test dist_to(dsp, g, 7) == 113

  @test has_path(dsp, g, 3) # true
  @test path_to(dsp, g, 3) == [6, 8, 3]
  @test dist_to(dsp, g, 3) == 62

  @test has_path(dsp, g, 1) # true
  @test path_to(dsp, g, 1) == [6, 5, 1]
  @test dist_to(dsp, g, 1) == 73
end


@testset "DSP 8e_16v" begin
  dsp, g = shortest_path("$(FILEDIR)/8v_16e.txt", 1)

  for (v, d) in [(1, 0), (2, 1), (3, 2), (4, 3), (5, 4), (6, 4), (7, 3), (8, 2) ]
    @test dist_to(dsp, g, v) == d
  end
end


@testset "DSP 200v_3734e challenge" begin
  dsp, g = shortest_path("$(FILEDIR)/200e_3734v.txt", 1)

  for (v, d) in [
                 (7, 2599), (37, 2610), (59, 2947), (82, 2052),
                 (99, 2367), (115, 2399), (133, 2029), (165, 2442),
                 (188, 2505), (197, 3068)
                 ]

    @test dist_to(dsp, g, v) == d
  end

  ## max. distance in this graph at index 161
  ix_max = argmax(dsp.dist_to)
  e = 161
  @test ix_max == e
  @test dist_to(dsp, g, e) == 4772

  exp_path = [1, 80, 19, 88, 161]
  @test path_to(dsp, g, e) == exp_path
  @test sum_w(g, exp_path) == dsp.dist_to[e]

  ## other path_to(1, 188)
  e = 188
  exp_path = [1, 92, 70, 9, 72, 157, 26, 95, 196, 188]
  @test path_to(dsp, g, e) == exp_path

  @test dist_to(dsp, g, e) == 2505
  @test sum_w(g, exp_path) == dsp.dist_to[e]

end

@testset "tiny_ewd [Princeton/Algo]" begin
  dsp, g = shortest_path("$(FILEDIR)/tiny_ewd.txt", 1; WType=Float32)

  # fromn 1 -> 2
  @test path_to(dsp, g, 2) == [1, 5, 6, 2]   ## from vertex source 1
  @test dist_to(dsp, g, 2) ≈ 1.05

  # 1 -> 7 (1.51) /  1->3,0.26   3->8,0.34  8->4,0.39 4->7,0.52
  @test path_to(dsp, g, 7) == [1, 3, 8, 4, 7]
  @test dist_to(dsp, g, 7) ≈ 1.51

  # 1 -> 4 (0.99) / 1->3,0.26 3->8,0.34 8->4,0.39
  @test path_to(dsp, g, 4) == [1, 3, 8, 4]
  @test dist_to(dsp, g, 4) ≈ 0.99

  # 1 to 8 (0.60) / 1->3,0.26 3->8,0.34
  @test path_to(dsp, g, 8) == [1, 3, 8]
  @test dist_to(dsp, g, 8) ≈ 0.60
end

@testset "medium_ewd [Princeton/Algo]" begin
  dsp, g = shortest_path("$(FILEDIR)/medium_ewd.txt", 1; WType=Float32)

  @test dist_to(dsp, g, 4) ≈ 0.46261996  ## dist(1, 4)
  @test dist_to(dsp, g, 5) ≈ 0.42292     ## dist(1, 5)
  @test dist_to(dsp, g, 3) ≈ 0.652370    ## dist(1, 3)
  @test dist_to(dsp, g, 2) ≈ 0.71178     ## dist(1, 2)

  @test path_to(dsp, g, 2) == [1, 45, 94, 188, 78, 79, 129, 70, 108, 2]  ## path: 1->2
  @test path_to(dsp, g, 5) == [1, 45, 94, 188, 78, 5]
  @test path_to(dsp, g, 3) == [1, 45, 232, 209, 66, 182, 43, 3]
end

# may take some time...
@testset "large_ewd [Princeton/Algo]" begin
  dsp, g = shortest_path("$(FILEDIR)/large_ewd.txt", 1; WType=Float32)

  @test dist_to(dsp, g, 4) ≈ 0.3133144
  @test dist_to(dsp, g, 697094) ≈ 0.6441915
  @test dist_to(dsp, g, 3) ≈ 0.60812354

  @test  path_to(dsp, g, 4) == [1, 460791, 752484, 465924, 890259, 534226, 150035, 558320, 497214, 34939, 179449, 718195, 317308, 828016, 507967, 808629, 231685, 289749, 516882, 136512, 998867, 368580, 904414, 240568, 660129, 834953, 49719, 211327, 445768, 390191, 23232, 599912, 557357, 622064, 675304, 548722, 440644, 55335, 901771, 728597, 609453, 495600, 950737, 722965, 647684, 830445, 306760, 821394, 771368, 886206, 348674, 80567, 290747, 667325, 881995, 727580, 70358, 391994, 420173, 617234, 5427, 659932, 745279, 399334, 36383, 288107, 729940, 352194, 817460, 18187, 31118, 797605, 933293, 594632, 590871, 421923, 947659, 54186, 271350, 898438, 320030, 304273, 574607, 570922, 919004, 683756, 179822, 58511, 279621, 137813, 201026, 197146, 492518, 859590, 47815, 638928, 797943, 19853, 16918, 580993, 428712, 287633, 569464, 401193, 171010, 550405, 607241, 526387, 883363, 229511, 140019, 162189, 860394, 50450, 278815, 458646, 852675, 533002, 924174, 679750, 953498, 501004, 690643, 825011, 844445, 24856, 721801, 890270, 618133, 275061, 665893, 145590, 517591, 409634, 313321, 499421, 110958, 399929, 199981, 623048, 690406, 333568, 16672, 141514, 852540, 744895, 268641, 397649, 403702, 260482, 56636, 605879, 43955, 720407, 337472, 310370, 921381, 484180, 684148, 882004, 653337, 671644, 267141, 134848, 375904, 597713, 423073, 858849, 952562, 958972, 113671, 467437, 401017, 428675, 466231, 294937, 109767, 329124, 274535, 498017, 271157, 959960, 256094, 450355, 150189, 381453, 901277, 246639, 255706, 790919, 934481, 15448, 698374, 4]

  @test path_to(dsp, g, 697094) == [1, 460791, 75231, 953126, 511814, 271819, 723034, 815899, 785383, 31990, 451970, 535888, 374206, 744990, 315839, 660393, 489431, 572334, 12577, 393988, 285448, 407249, 155259, 544571, 804179, 343341, 58952, 366474, 833095, 108024, 527104, 494406, 309846, 325369, 247228, 859621, 415429, 298392, 223916, 761963, 993787, 361135, 795571, 50828, 960274, 212845, 114811, 51100, 162573, 509986, 73624, 263541, 348666, 769961, 692194, 699963, 318883, 817145, 988089, 618521, 758188, 35988, 6669, 34049, 269513, 275046, 839499, 936229, 233342, 488651, 814665, 526202, 752903, 104965, 392003, 889897, 565924, 741384, 882060, 925496, 474460, 527266, 446215, 287592, 17194, 76228, 850513, 831777, 556634, 492707, 693837, 148147, 634359, 669531, 533130, 21514, 820466, 105625, 260193, 459677, 904811, 285713, 547286, 776085, 570656, 993558, 377766, 542489, 415802, 18375, 738340, 840579, 391087, 970387, 268036, 348970, 759539, 92290, 498875, 82352, 132071, 81920, 885494, 684196, 451978, 915944, 605874, 649819, 719707, 889050, 882711, 755033, 716311, 506253, 744755, 347872, 17020, 355158, 335422, 272146, 424358, 561136, 8599, 431217, 474527, 347193, 224929, 575171, 998587, 907827, 525231, 895010, 927517, 544624, 613801, 571549, 3060, 442242, 967455, 751487, 292257, 850381, 698713, 525152, 177394, 870223, 722326, 658900, 639964, 644024, 228187, 19702, 752861, 142692, 971720, 282635, 323750, 324731, 197044, 927248, 184068, 568055, 223823, 452999, 885399, 63882, 454511, 591332, 404343, 787225, 92838, 929595, 781977, 424778, 417025, 407054, 384399, 148408, 419400, 433147, 977389, 478912, 893808, 531619, 615575, 518337, 952261, 935975, 467018, 564925, 433574, 278972, 948933, 202273, 458520, 248761, 166013, 410423, 712948, 162729, 565438, 648339, 176860, 351905, 392217, 734203, 679839, 332616, 207501, 991754, 522519, 261022, 218134, 792072, 977189, 694595, 330633, 315736, 894587, 570788, 539063, 181396, 797812, 852222, 25393, 413752, 449918, 714460, 597426, 977121, 108616, 519177, 419359, 798710, 486602, 648474, 50809, 286715, 428081, 309129, 940198, 598520, 347777, 197310, 9513, 94217, 181677, 414858, 791492, 162401, 302642, 397366, 634881, 100455, 870848, 865325, 252339, 247838, 445679, 245250, 828176, 107538, 837677, 531186, 856444, 42330, 213653, 458044, 580000, 702344, 613876, 463283, 520758, 289500, 781957, 382246, 272347, 874622, 50040, 952291, 214840, 594264, 867520, 302959, 775720, 690215, 621661, 718739, 440040, 410790, 504796, 652081, 149909, 214771, 469768, 634682, 606088, 273460, 529530, 364756, 689447, 312157, 725347, 471888, 994063, 131532, 487314, 628487, 198609, 490544, 203749, 923742, 605026, 424276, 256768, 955600, 268872, 252647, 653580, 841942, 697163, 132109, 271232, 668051, 516408, 865533, 929570, 930096, 827000, 508115, 325383, 738954, 533595, 30269, 80028, 91147, 637109, 585734, 917693, 711506, 416450, 94320, 969566, 405846, 702254, 938410, 673202, 800762, 237963, 5660, 355704, 769410, 236524, 810122, 809894, 390043, 628164, 108533, 324468, 748322, 955749, 781533, 606683, 246227, 900353, 965960, 266196, 376844, 590109, 676611, 295047, 697094]
end

# julia> for x in [7,37,59,82,99,115,133,165,188,197]
#          println("==> distance to: $(x) is $(dist_to(dsp, g, x))")
#          end
# ==> distance to: 7 is 2599
# ==> distance to: 37 is 2610
# ==> distance to: 59 is 2947
# ==> distance to: 82 is 2052
# ==> distance to: 99 is 2367
# ==> distance to: 115 is 2399
# ==> distance to: 133 is 2029
# ==> distance to: 165 is 2442
# ==> distance to: 188 is 2505
# ==> distance to: 197 is 3068
# 2599,2610,2947,2052,2367,2399,2029,2442,2505,3068

# for x in [7,37,59,82,99,115,133,165,188,197]
#          println("==> path to: $(x) from 1 is $(path_to(dsp, g, x))")
#        end
# ==> path to: 7 from 1 is [1, 114, 129, 85, 53, 7]
# ==> path to: 37 from 1 is [1, 145, 108, 126, 155, 37]
# ==> path to: 59 from 1 is [1, 92, 194, 162, 59]
# ==> path to: 82 from 1 is [1, 92, 134, 135, 82]
# ==> path to: 99 from 1 is [1, 99]
# ==> path to: 115 from 1 is [1, 80, 115]
# ==> path to: 133 from 1 is [1, 114, 129, 85, 133]
# ==> path to: 165 from 1 is [1, 80, 19, 187, 165]
# ==> path to: 188 from 1 is [1, 92, 70, 9, 72, 157, 26, 95, 196, 188]
# ==> path to: 197 from 1 is [1, 114, 103, 110, 197]
#
